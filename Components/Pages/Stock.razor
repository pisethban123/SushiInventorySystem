@page "/stock"
@using MudBlazor

<PageTitle>Stock Management</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4 px-2">
    <MudText Typo="Typo.h4" Class="mb-4">Stock Management</MudText>

    @* Add & Remove Buttons *@
    <MudStack Row="true" Spacing="2" Class="mb-4">
        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   StartIcon="@Icons.Material.Filled.Add"
                   OnClick="HandleAddStock">
            Add Stock
        </MudButton>

        <MudButton Variant="Variant.Filled"
                   Color="Color.Error"
                   StartIcon="@Icons.Material.Filled.Remove"
                   OnClick="HandleDeductStock">
            Deduct Stock
        </MudButton>
    </MudStack>

    @* Stock Table *@
    <MudTable Items="@stockList"
              Hover="true"
              Striped="true"
              Bordered="true"
              Dense="false"
              Filter="new Func<StockModel, bool>(FilterFunc)"
              Class="stock-table">

        <ToolBarContent>
            <MudText Typo="Typo.h6" Class="toolbar-title">Stock List</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString"
                          Placeholder="Search"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Search"
                          IconSize="Size.Medium"
                          Class="mt-0 search-field"
                          Immediate="true"></MudTextField>
        </ToolBarContent>

        <HeaderContent>
            <MudTh>Item ID</MudTh>
            <MudTh>Item Name</MudTh>
            <MudTh>Branch Name</MudTh>
            <MudTh>Quantity</MudTh>
        </HeaderContent>

        <RowTemplate>
            <MudTd DataLabel="Item ID">@context.ItemId</MudTd>
            <MudTd DataLabel="Item Name">@context.ItemName</MudTd>
            <MudTd DataLabel="Branch Name">@context.BranchName</MudTd>
            <MudTd DataLabel="Quantity">@context.Quantity</MudTd>
        </RowTemplate>

        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100 }" />
        </PagerContent>
    </MudTable>
</MudContainer>

<style>
    /* Match layout style with Branch and Item pages */
    .stock-table .mud-table-cell {
        vertical-align: middle !important;
    }

    @@media (max-width: 640.98px) {
        .stock-table {
            font-size: 0.875rem;
        }

        .mud-table-cell,
        .mud-table-head-cell {
            padding: 8px 4px !important;
        }

        .toolbar-title {
            font-size: 1rem !important;
            white-space: nowrap;
        }

        .search-field {
            max-width: 180px !important;
        }
    }

    @@media (min-width: 641px) and (max-width: 960px) {
        .stock-table {
            font-size: 0.9rem;
        }
    }

    @@media (min-width: 961px) and (max-width: 1280px) {
        .stock-table {
            font-size: 0.95rem;
        }
    }
</style>

@code {
    private List<StockModel> stockList = new();
    private string searchString = "";

    protected override void OnInitialized()
    {
        // Example data showing item stocks per branch
        stockList = new List<StockModel>
        {
            new StockModel { ItemId = "ING001", ItemName = "Salmon Fillet", BranchName = "Main Branch", Quantity = 25 },
            new StockModel { ItemId = "ING001", ItemName = "Salmon Fillet", BranchName = "North Branch", Quantity = 18 },
            new StockModel { ItemId = "ING002", ItemName = "Sushi Rice", BranchName = "Main Branch", Quantity = 100 },
            new StockModel { ItemId = "ING002", ItemName = "Sushi Rice", BranchName = "South Branch", Quantity = 60 },
            new StockModel { ItemId = "ING003", ItemName = "Soy Sauce", BranchName = "Main Branch", Quantity = 30 },
            new StockModel { ItemId = "ING004", ItemName = "Seaweed Sheets (Nori)", BranchName = "North Branch", Quantity = 12 },
            new StockModel { ItemId = "ING005", ItemName = "Avocado", BranchName = "East Branch", Quantity = 20 },
            new StockModel { ItemId = "ING006", ItemName = "Cucumber", BranchName = "West Branch", Quantity = 35 },
            new StockModel { ItemId = "ING007", ItemName = "Tuna", BranchName = "South Branch", Quantity = 10 },
            new StockModel { ItemId = "ING008", ItemName = "Wasabi Paste", BranchName = "Central Branch", Quantity = 50 }
        };
    }

    private bool FilterFunc(StockModel stock)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;

        return stock.ItemId.Contains(searchString, StringComparison.OrdinalIgnoreCase)
            || stock.ItemName.Contains(searchString, StringComparison.OrdinalIgnoreCase)
            || stock.BranchName.Contains(searchString, StringComparison.OrdinalIgnoreCase);
    }

    private void HandleAddStock()
    {
        // Future: open dialog to add new stock record
    }

    private void HandleDeductStock()
    {
        // Future: open dialog to remove or adjust stock
    }

    public class StockModel
    {
        public string ItemId { get; set; } = string.Empty;
        public string ItemName { get; set; } = string.Empty;
        public string BranchName { get; set; } = string.Empty;
        public int Quantity { get; set; }
    }
}
