@page "/transfer"
@using MudBlazor

<PageTitle>Transfer Management</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4 px-2">
    <MudText Typo="Typo.h4" Class="mb-4">Transfer Management</MudText>

    @* Transfer Button *@
    <MudStack Row="true" Class="mb-4">
        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   StartIcon="@Icons.Material.Filled.SwapHoriz"
                   OnClick="HandleTransfer">
            Transfer Item
        </MudButton>
    </MudStack>

    @* Transfer History Table *@
    <MudTable Items="@transfers"
              Hover="true"
              Striped="true"
              Bordered="true"
              Dense="false"
              RowsPerPage="10"
              Class="transfer-table">

        <ToolBarContent>
            <MudText Typo="Typo.h6" Class="toolbar-title">Transfer History</MudText>
        </ToolBarContent>

        <HeaderContent>
            <MudTh>ID</MudTh>
            <MudTh>Item Name</MudTh>
            <MudTh>Qty</MudTh>
            <MudTh>Unit</MudTh>
            <MudTh>Branch From</MudTh>
            <MudTh>Branch To</MudTh>
            <MudTh>Transfer Date</MudTh>
        </HeaderContent>

        <RowTemplate>
            <MudTd DataLabel="ID">@context.TransferId</MudTd>
            <MudTd DataLabel="Item Name">@context.ItemName</MudTd>
            <MudTd DataLabel="Qty">@context.Quantity</MudTd>
            <MudTd DataLabel="Unit">@context.Unit</MudTd>
            <MudTd DataLabel="Branch From">@context.BranchFrom</MudTd>
            <MudTd DataLabel="Branch To">@context.BranchTo</MudTd>
            <MudTd DataLabel="Transfer Date">@context.TransferDate.ToString("yyyy-MM-dd")</MudTd>
        </RowTemplate>

        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 10 }" />
        </PagerContent>
    </MudTable>
</MudContainer>

<style>
    .transfer-table .mud-table-cell {
        vertical-align: middle !important;
    }

    /* Responsive design */
    @@media (max-width: 640.98px) {
        .transfer-table {
            font-size: 0.875rem;
        }

        .mud-table-cell,
        .mud-table-head-cell {
            padding: 8px 4px !important;
        }

        .toolbar-title {
            font-size: 1rem !important;
            white-space: nowrap;
        }

        .mud-container {
            padding-left: 1rem !important;
            padding-right: 1rem !important;
        }
    }

    @@media (min-width: 641px) and (max-width: 960px) {
        .transfer-table {
            font-size: 0.9rem;
        }
    }

    @@media (min-width: 961px) and (max-width: 1280px) {
        .transfer-table {
            font-size: 0.95rem;
        }
    }
</style>

@code {
    private List<TransferModel> transfers = new();

    protected override void OnInitialized()
    {
        transfers = new List<TransferModel>
        {
            new TransferModel { TransferId = "T001", ItemName = "Salmon Fillet", Quantity = 10, Unit = "kg", BranchFrom = "Main Branch", BranchTo = "North Branch", TransferDate = new DateTime(2025, 10, 10) },
            new TransferModel { TransferId = "T002", ItemName = "Sushi Rice", Quantity = 25, Unit = "kg", BranchFrom = "South Branch", BranchTo = "Main Branch", TransferDate = new DateTime(2025, 10, 11) },
            new TransferModel { TransferId = "T003", ItemName = "Soy Sauce", Quantity = 15, Unit = "L", BranchFrom = "Central Branch", BranchTo = "East Branch", TransferDate = new DateTime(2025, 10, 12) },
            new TransferModel { TransferId = "T004", ItemName = "Avocado", Quantity = 12, Unit = "kg", BranchFrom = "North Branch", BranchTo = "Central Branch", TransferDate = new DateTime(2025, 10, 13) },
            new TransferModel { TransferId = "T005", ItemName = "Tuna", Quantity = 8, Unit = "kg", BranchFrom = "Main Branch", BranchTo = "Harbour Branch", TransferDate = new DateTime(2025, 10, 14) },
            new TransferModel { TransferId = "T006", ItemName = "Wasabi Paste", Quantity = 18, Unit = "Tube", BranchFrom = "West Branch", BranchTo = "East Branch", TransferDate = new DateTime(2025, 10, 15) },
            new TransferModel { TransferId = "T007", ItemName = "Cucumber", Quantity = 20, Unit = "kg", BranchFrom = "Central Branch", BranchTo = "Main Branch", TransferDate = new DateTime(2025, 10, 16) },
            new TransferModel { TransferId = "T008", ItemName = "Seaweed Sheets (Nori)", Quantity = 10, Unit = "Pack", BranchFrom = "East Branch", BranchTo = "West Branch", TransferDate = new DateTime(2025, 10, 17) },
            new TransferModel { TransferId = "T009", ItemName = "Ginger Pickle", Quantity = 35, Unit = "Jar", BranchFrom = "South Branch", BranchTo = "North Branch", TransferDate = new DateTime(2025, 10, 18) },
            new TransferModel { TransferId = "T010", ItemName = "Tempura Flour", Quantity = 40, Unit = "kg", BranchFrom = "City Branch", BranchTo = "Main Branch", TransferDate = new DateTime(2025, 10, 19) },
            new TransferModel { TransferId = "T011", ItemName = "Sushi Rice", Quantity = 15, Unit = "kg", BranchFrom = "Main Branch", BranchTo = "Central Branch", TransferDate = new DateTime(2025, 10, 20) }
        };
    }

    private void HandleTransfer()
    {
        // Future: open dialog for creating a new transfer
    }

    public class TransferModel
    {
        public string TransferId { get; set; } = string.Empty;
        public string ItemName { get; set; } = string.Empty;
        public int Quantity { get; set; }
        public string Unit { get; set; } = string.Empty;
        public string BranchFrom { get; set; } = string.Empty;
        public string BranchTo { get; set; } = string.Empty;
        public DateTime TransferDate { get; set; }
    }
}
